name: Build Piton apphost binaries

on:
  workflow_call:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  MACOSX_DEPLOYMENT_TARGET: 10.12

jobs:
  build:
    strategy:
      matrix:
        ui:
          - none
          - cli
          - gui

        targets:
          - os: windows-latest
            target: i686-pc-windows-msvc
            target_name: win_x86
            exec_suffix: .exe

          - os: windows-latest
            target: x86_64-pc-windows-msvc
            target_name: win_64
            exec_suffix: .exe

          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            target_name: linux_x64

            #https://kobzol.github.io/rust/ci/2021/05/07/building-rust-binaries-in-ci-that-work-with-older-glibc.html
            container: quay.io/pypa/manylinux_2_28_x86_64

          - os: macos-latest
            target: x86_64-apple-darwin
            target_name: macos_x64

            args:
            name: piton-linux_x64

        include: 
          # Linux GUI support needs libgtk-3-dev to be installed
          - target_name: linux_x64
            ui: gui
            apt_deps: libgtk-3-dev

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v4
 
      - name: Setup environment variables
        run: |
          echo "RUSTUP_HOME=$HOME/.rustup" >> "$GITHUB_ENV"
          echo "CARGO_HOME=$HOME/.cargo" >> "$GITHUB_ENV"
 
      - name: Install dependencies
        if: ${{ matrix.apt_deps }}
        run: sudo apt-get install -y ${{ matrix.apt_deps }}

      - name: Cache toolchain / dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.rustup
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            apphost/target/
          key: ${{ runner.os }}-${{ matrix.container }}-apphost-cargo-${{ hashFiles('apphost/Cargo.toml') }}
          restore-keys:
            ${{ runner.os }}-${{ matrix.container }}-apphost-cargo-

      - name: Setup Rust toolchain
        if: ${{ !steps.cache.outputs.cache-hit }}
        run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --profile minimal -y

      - name: Build Piton binary
        working-directory: apphost
        run: ~/.cargo/bin/cargo build --verbose --release --target ${{ matrix.target }} -F ui-${{ matrix.ui }}

      - run: mv apphost/target/${{ matrix.target }}/release/piton${{ matrix.exec_suffix }} piton-${{ matrix.target_name }}-${{ matrix.ui }}${{ matrix.exec_suffix }}

      - name: Upload Piton binary
        uses: actions/upload-artifact@v4
        with:
          name: apphost-${{ matrix.target_name }}-${{ matrix.ui }}
          path: piton-${{ matrix.target_name }}-${{ matrix.ui }}${{ matrix.exec_suffix }}
          if-no-files-found: error