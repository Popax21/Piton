name: Build Piton NuGet package

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  check-apphost-cache:
    name: Check apphost binary cache

    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-check.outputs.cache-hit }}
      cache-key: ${{ steps.cache-check.outputs.cache-primary-key }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        id: cache-check
        with:
          key: apphost-binaries-${{ hashFiles('apphost') }}
          path: apphost
          lookup-only: true

  build-apphost:
    name: Build apphost binaries

    needs: check-apphost-cache
    uses: ./.github/workflows/build-apphost.yml
    if: ${{ !needs.check-apphost-cache.outputs.cache-hit }}

  cache-apphost-binaries:
    name: Cache built apphost binaries

    runs-on: ubuntu-latest
    needs: [check-apphost-cache, build-apphost]
    if: ${{ !needs.check-apphost-cache.outputs.cache-hit }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: apphost-bin-*
          path: apphost-bin
          merge-multiple: true
      - uses: actions/cache/save@v4
        id: cache-check
        with:
          key: needs.check-apphost-cache.outputs.cache-key
          path: apphost

  build-nugetpkg:
    name: Build NuGet package

    runs-on: ubuntu-latest
    needs: [check-apphost-cache, build-apphost]
    if: ${{ !cancelled() && (needs.check-apphost-cache.outputs.cache-hit || needs.build-apphost.result == 'success') }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Cache Piton MSBuild tasks assembly
        uses: actions/cache@v4
        id: cache-msbuild-tasks
        with:
          path: |
            msbuild/bin
            msbuild/obj
          key: piton-msbuild-tasks-${{ hashFiles('msbuild') }}
          restore-keys: |
            piton-msbuild-tasks-

      - name: Build Piton MSBuild tasks
        if: ${{ !steps.cache-msbuild-tasks.outputs.cache-hit }}
        run: dotnet build -c Release -p:TreatWarningsAsErrors=true msbuild

      - name: Download Piton apphost binaries
        uses: actions/download-artifact@v4
        with:
          pattern: apphost-bin-*
          path: apphost-bin
          merge-multiple: true

      - name: Pack NuGet package
        run: dotnet pack -p:TreatWarningsAsErrors=true -p:PitonAppHostBinDir=apphost-bin --output out Piton.NuGet.proj

      - uses: actions/upload-artifact@v4
        with:
          name: piton-nugetpkg
          path: out/*.nupkg
          if-no-files-found: error